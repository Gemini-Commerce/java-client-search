/*
 * Search Service
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * Contact: info@gemini-commerce.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import GeminiCommerce.Search.ApiException;
import org.openapitools.client.model.RpcStatus;
import org.openapitools.client.model.SearchConfigRequest;
import org.openapitools.client.model.SearchDeleteRequest;
import org.openapitools.client.model.SearchDeleteResponse;
import org.openapitools.client.model.SearchQueryRequest;
import org.openapitools.client.model.SearchQueryResponse;
import org.openapitools.client.model.SearchWriteRequest;
import org.openapitools.client.model.SearchWriteResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SearchApi
 */
@Disabled
public class SearchApiTest {

    private final SearchApi api = new SearchApi();

    /**
     * Indexes configuration
     *
     * Create or update indexes by a passed configuration schema
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchConfigurationTest() throws ApiException {
        SearchConfigRequest body = null;
        Object response = api.searchConfiguration(body);
        // TODO: test validations
    }

    /**
     * Delete Indexes
     *
     * Delete indexes from ElasticSearch and Cassandra configuration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchDeleteTest() throws ApiException {
        SearchDeleteRequest body = null;
        SearchDeleteResponse response = api.searchDelete(body);
        // TODO: test validations
    }

    /**
     * Insert or replace documents to different elasticsearch indexes
     *
     * Insert or replace a document or more in a specified ElasticSearch index of a tenant
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchInsertOrReplaceTest() throws ApiException {
        SearchWriteRequest body = null;
        SearchWriteResponse response = api.searchInsertOrReplace(body);
        // TODO: test validations
    }

    /**
     * Send queries to different elasticsearch indexes
     *
     * MSearch promises to send a list of queries to elasticsearch to be executed on different indexes, it can also be used as an autocomplete by adding the corresponding TYPE
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchMSearchTest() throws ApiException {
        SearchQueryRequest body = null;
        SearchQueryResponse response = api.searchMSearch(body);
        // TODO: test validations
    }

    /**
     * Update documents to different elasticsearch indexes
     *
     * Update a document or more in a specified ElasticSearch index of a tenant
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchUpdateTest() throws ApiException {
        SearchWriteRequest body = null;
        SearchWriteResponse response = api.searchUpdate(body);
        // TODO: test validations
    }

}
